[{"/home/sumit/Desktop/react-reducer-template/src/index.js":"1","/home/sumit/Desktop/react-reducer-template/src/App.js":"2","/home/sumit/Desktop/react-reducer-template/src/StateProvider.js":"3","/home/sumit/Desktop/react-reducer-template/src/reducer.js":"4","/home/sumit/Desktop/red-positive/src/index.js":"5","/home/sumit/Desktop/red-positive/src/reducer.js":"6","/home/sumit/Desktop/red-positive/src/App.js":"7","/home/sumit/Desktop/red-positive/src/StateProvider.js":"8"},{"size":386,"mtime":1616604021470,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1617163140753,"results":"11","hashOfConfig":"10"},{"size":466,"mtime":1616604021470,"results":"12","hashOfConfig":"10"},{"size":278,"mtime":1616604021470,"results":"13","hashOfConfig":"10"},{"size":386,"mtime":1616604021470,"results":"14","hashOfConfig":"15"},{"size":278,"mtime":1616604021470,"results":"16","hashOfConfig":"15"},{"size":8446,"mtime":1617472168667,"results":"17","hashOfConfig":"15"},{"size":466,"mtime":1616604021470,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xwsg5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y9hlj3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sumit/Desktop/react-reducer-template/src/index.js",[],"/home/sumit/Desktop/react-reducer-template/src/App.js",["35","36"],"/home/sumit/Desktop/react-reducer-template/src/StateProvider.js",[],"/home/sumit/Desktop/react-reducer-template/src/reducer.js",[],"/home/sumit/Desktop/red-positive/src/index.js",[],"/home/sumit/Desktop/red-positive/src/reducer.js",[],"/home/sumit/Desktop/red-positive/src/App.js",["37","38","39","40","41","42"],"/home/sumit/Desktop/red-positive/src/StateProvider.js",[],{"ruleId":"43","severity":1,"message":"44","line":6,"column":12,"nodeType":"45","messageId":"46","endLine":6,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":6,"column":19,"nodeType":"45","messageId":"46","endLine":6,"endColumn":27},{"ruleId":"48","severity":1,"message":"49","line":52,"column":15,"nodeType":"50","endLine":80,"endColumn":6},{"ruleId":"43","severity":1,"message":"51","line":112,"column":15,"nodeType":"45","messageId":"46","endLine":112,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":140,"column":33,"nodeType":"54","endLine":149,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":158,"column":33,"nodeType":"54","endLine":167,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":176,"column":33,"nodeType":"54","endLine":185,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":194,"column":33,"nodeType":"54","endLine":203,"endColumn":34},"no-unused-vars","'msg' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'marker' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]